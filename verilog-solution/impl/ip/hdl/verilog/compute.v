// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="compute,hls_ip_2016_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.183000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=156,HLS_SYN_FF=8975,HLS_SYN_LUT=11309}" *)

module compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        size,
        length_r,
        dataa_address0,
        dataa_ce0,
        dataa_we0,
        dataa_d0,
        dataa_q0,
        dataa_address1,
        dataa_ce1,
        dataa_q1,
        datac_address0,
        datac_ce0,
        datac_we0,
        datac_d0,
        datac_q0,
        datac_address1,
        datac_ce1,
        datac_q1,
        datag_address0,
        datag_ce0,
        datag_we0,
        datag_d0,
        datag_q0,
        datag_address1,
        datag_ce1,
        datag_q1,
        datat_address0,
        datat_ce0,
        datat_we0,
        datat_d0,
        datat_q0,
        datat_address1,
        datat_ce1,
        datat_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 29'b1;
parameter    ap_ST_fsm_state2 = 29'b10;
parameter    ap_ST_fsm_state3 = 29'b100;
parameter    ap_ST_fsm_state4 = 29'b1000;
parameter    ap_ST_fsm_state5 = 29'b10000;
parameter    ap_ST_fsm_state6 = 29'b100000;
parameter    ap_ST_fsm_state7 = 29'b1000000;
parameter    ap_ST_fsm_state8 = 29'b10000000;
parameter    ap_ST_fsm_state9 = 29'b100000000;
parameter    ap_ST_fsm_state10 = 29'b1000000000;
parameter    ap_ST_fsm_state11 = 29'b10000000000;
parameter    ap_ST_fsm_state12 = 29'b100000000000;
parameter    ap_ST_fsm_state13 = 29'b1000000000000;
parameter    ap_ST_fsm_state14 = 29'b10000000000000;
parameter    ap_ST_fsm_state15 = 29'b100000000000000;
parameter    ap_ST_fsm_state16 = 29'b1000000000000000;
parameter    ap_ST_fsm_state17 = 29'b10000000000000000;
parameter    ap_ST_fsm_state18 = 29'b100000000000000000;
parameter    ap_ST_fsm_state19 = 29'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 29'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 29'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 29'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 29'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 29'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 29'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 29'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 29'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 29'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 29'b10000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv64_3FE29105E1C15098 = 64'b11111111100010100100010000010111100001110000010101000010011000;
parameter    ap_const_lv64_3FCDB9389B52007E = 64'b11111111001101101110010011100010011011010100100000000001111110;
parameter    ap_const_lv64_3FA802B693A563D2 = 64'b11111110101000000000101011011010010011101001010110001111010010;
parameter    ap_const_lv64_3FC2020817FC7608 = 64'b11111111000010000000100000100000010111111111000111011000001000;
parameter    ap_const_lv64_3FB802B4E6263A26 = 64'b11111110111000000000101011010011100110001001100011101000100110;
parameter    ap_const_lv64_3FC0D306A2B17050 = 64'b11111111000000110100110000011010100010101100010111000001010000;
parameter    ap_const_lv64_3FC802B841248D7E = 64'b11111111001000000000101011100001000001001001001000110101111110;
parameter    ap_const_lv64_3FD6456F75D9A0F1 = 64'b11111111010110010001010110111101110101110110011010000011110001;
parameter    ap_const_lv64_3FD4C17225B749AE = 64'b11111111010100110000010111001000100101101101110100100110101110;
parameter    ap_const_lv64_3FE2CA3C64345CFF = 64'b11111111100010110010100011110001100100001101000101110011111111;
parameter    ap_const_lv64_3FDDB93469941850 = 64'b11111111011101101110010011010001101001100101000001100001010000;
parameter    ap_const_lv64_3FD93C85C24C404A = 64'b11111111011001001111001000010111000010010011000100000001001010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] size;
input  [31:0] length_r;
output  [6:0] dataa_address0;
output   dataa_ce0;
output   dataa_we0;
output  [63:0] dataa_d0;
input  [63:0] dataa_q0;
output  [6:0] dataa_address1;
output   dataa_ce1;
input  [63:0] dataa_q1;
output  [6:0] datac_address0;
output   datac_ce0;
output   datac_we0;
output  [63:0] datac_d0;
input  [63:0] datac_q0;
output  [6:0] datac_address1;
output   datac_ce1;
input  [63:0] datac_q1;
output  [6:0] datag_address0;
output   datag_ce0;
output   datag_we0;
output  [63:0] datag_d0;
input  [63:0] datag_q0;
output  [6:0] datag_address1;
output   datag_ce1;
input  [63:0] datag_q1;
output  [6:0] datat_address0;
output   datat_ce0;
output   datat_we0;
output  [63:0] datat_d0;
input  [63:0] datat_q0;
output  [6:0] datat_address1;
output   datat_ce1;
input  [63:0] datat_q1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] dataa_address0;
reg dataa_ce0;
reg dataa_we0;
reg dataa_ce1;
reg[6:0] datac_address0;
reg datac_ce0;
reg datac_we0;
reg datac_ce1;
reg[6:0] datag_address0;
reg datag_ce0;
reg datag_we0;
reg datag_ce1;
reg[6:0] datat_address0;
reg datat_ce0;
reg datat_we0;
reg datat_ce1;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [63:0] grp_fu_381_p2;
reg   [63:0] reg_477;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
wire   [63:0] grp_fu_387_p2;
reg   [63:0] reg_484;
wire   [63:0] grp_fu_393_p2;
reg   [63:0] reg_492;
wire   [63:0] grp_fu_399_p2;
reg   [63:0] reg_500;
wire   [63:0] grp_fu_405_p2;
reg   [63:0] reg_507;
wire   [63:0] grp_fu_411_p2;
reg   [63:0] reg_514;
wire   [63:0] grp_fu_349_p2;
reg   [63:0] reg_521;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] ap_CS_fsm_state28;
wire   [63:0] grp_fu_353_p2;
reg   [63:0] reg_527;
wire   [63:0] grp_fu_357_p2;
reg   [63:0] reg_533;
wire   [63:0] grp_fu_361_p2;
reg   [63:0] reg_539;
wire   [63:0] grp_fu_365_p2;
reg   [63:0] reg_545;
wire   [63:0] grp_fu_369_p2;
reg   [63:0] reg_551;
wire   [63:0] grp_fu_373_p2;
reg   [63:0] reg_557;
wire   [63:0] grp_fu_377_p2;
reg   [63:0] reg_563;
wire   [31:0] i_1_fu_569_p2;
reg   [31:0] i_1_reg_857;
wire   [0:0] ap_CS_fsm_state2;
wire   [31:0] i_fu_581_p2;
wire   [0:0] ap_CS_fsm_state3;
wire   [31:0] result_fu_587_p2;
wire   [0:0] exitcond1_fu_575_p2;
wire   [31:0] indvars_iv_next_fu_598_p2;
wire   [0:0] tmp_i_fu_593_p2;
wire   [31:0] k_fu_604_p2;
reg   [31:0] k_reg_883;
wire   [0:0] ap_CS_fsm_state4;
wire   [31:0] i_2_fu_622_p2;
wire   [0:0] ap_CS_fsm_state5;
wire   [31:0] result_1_fu_628_p2;
wire   [0:0] exitcond_fu_616_p2;
wire   [31:0] left_fu_634_p2;
wire   [7:0] tmp_1_fu_664_p2;
reg   [7:0] tmp_1_reg_912;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] tmp_3_fu_640_p3;
wire   [7:0] tmp_2_fu_686_p2;
reg   [7:0] tmp_2_reg_917;
wire   [7:0] tmp_57_fu_764_p2;
reg   [7:0] tmp_57_reg_922;
wire   [31:0] indvars_iv_next2_fu_770_p2;
wire   [30:0] y_1_fu_785_p2;
reg   [30:0] y_1_reg_935;
wire   [0:0] ap_CS_fsm_state7;
wire  signed [63:0] tmp_60_cast_fu_800_p1;
reg  signed [63:0] tmp_60_cast_reg_940;
wire   [0:0] tmp_6_fu_780_p2;
wire  signed [63:0] tmp_61_cast_fu_811_p1;
reg  signed [63:0] tmp_61_cast_reg_951;
wire   [7:0] tmp_61_fu_817_p2;
reg   [7:0] tmp_61_reg_962;
wire   [31:0] left_1_fu_822_p2;
wire   [31:0] right_fu_828_p2;
wire   [31:0] leaves_1_fu_834_p2;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state11;
wire   [63:0] grp_fu_417_p2;
reg   [63:0] tmp_26_reg_1037;
wire   [63:0] grp_fu_423_p2;
reg   [63:0] tmp_27_reg_1042;
wire   [63:0] grp_fu_429_p2;
reg   [63:0] tmp_32_reg_1055;
wire   [63:0] grp_fu_435_p2;
reg   [63:0] tmp_33_reg_1061;
wire   [63:0] grp_fu_441_p2;
reg   [63:0] tmp_38_reg_1066;
wire   [63:0] grp_fu_447_p2;
reg   [63:0] tmp_42_reg_1071;
wire   [0:0] ap_CS_fsm_state15;
reg   [31:0] index_assign_reg_216;
reg   [31:0] indvars_iv_reg_228;
reg   [31:0] i_i_i_reg_240;
reg   [31:0] deSize_reg_251;
reg   [31:0] indvars_iv2_reg_262;
reg   [31:0] k1_in_reg_273;
reg   [31:0] i_i_reg_283;
wire   [0:0] tmp_fu_610_p2;
reg   [31:0] right_2_reg_294;
reg   [31:0] left1_reg_306;
reg   [31:0] right1_reg_316;
reg   [31:0] leaves1_reg_327;
reg   [30:0] y_reg_338;
wire   [0:0] ap_CS_fsm_state29;
wire  signed [63:0] tmp_62_cast_fu_840_p1;
reg   [63:0] grp_fu_349_p0;
reg   [63:0] grp_fu_349_p1;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] ap_CS_fsm_state17;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] ap_CS_fsm_state25;
reg   [63:0] grp_fu_353_p0;
reg   [63:0] grp_fu_353_p1;
reg   [63:0] grp_fu_357_p0;
reg   [63:0] grp_fu_357_p1;
reg   [63:0] grp_fu_361_p0;
reg   [63:0] grp_fu_361_p1;
reg   [63:0] grp_fu_365_p0;
reg   [63:0] grp_fu_365_p1;
reg   [63:0] grp_fu_369_p0;
reg   [63:0] grp_fu_369_p1;
reg   [63:0] grp_fu_373_p0;
reg   [63:0] grp_fu_373_p1;
reg   [63:0] grp_fu_377_p0;
reg   [63:0] grp_fu_377_p1;
reg   [63:0] grp_fu_381_p0;
reg   [63:0] grp_fu_381_p1;
reg   [63:0] grp_fu_387_p0;
reg   [63:0] grp_fu_387_p1;
reg   [63:0] grp_fu_393_p0;
reg   [63:0] grp_fu_393_p1;
reg   [63:0] grp_fu_399_p0;
reg   [63:0] grp_fu_399_p1;
reg   [63:0] grp_fu_405_p0;
reg   [63:0] grp_fu_405_p1;
reg   [63:0] grp_fu_411_p0;
reg   [63:0] grp_fu_411_p1;
wire   [5:0] tmp_9_fu_652_p1;
wire   [7:0] p_shl2_cast_fu_656_p3;
wire   [7:0] tmp_8_fu_648_p1;
wire   [5:0] tmp_51_fu_674_p1;
wire   [7:0] p_shl1_cast_fu_678_p3;
wire   [7:0] tmp_50_fu_670_p1;
wire   [31:0] p_neg_fu_700_p2;
wire   [30:0] p_lshr_fu_706_p4;
wire   [31:0] tmp_53_fu_716_p1;
wire   [30:0] p_lshr_f_fu_726_p4;
wire   [0:0] tmp_52_fu_692_p3;
wire   [31:0] p_neg_t_fu_720_p2;
wire   [31:0] tmp_54_fu_736_p1;
wire   [31:0] parent_fu_740_p3;
wire   [5:0] tmp_56_fu_752_p1;
wire   [7:0] p_shl_cast_fu_756_p3;
wire   [7:0] tmp_55_fu_748_p1;
wire   [31:0] y_cast_fu_776_p1;
wire   [7:0] tmp_58_fu_791_p1;
wire   [7:0] tmp_59_fu_795_p2;
wire   [7:0] tmp_60_fu_806_p2;
reg   [28:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'b1;
end

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p0),
    .din1(grp_fu_349_p1),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_353_p0),
    .din1(grp_fu_353_p1),
    .ce(1'b1),
    .dout(grp_fu_353_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_357_p0),
    .din1(grp_fu_357_p1),
    .ce(1'b1),
    .dout(grp_fu_357_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_361_p0),
    .din1(grp_fu_361_p1),
    .ce(1'b1),
    .dout(grp_fu_361_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_365_p0),
    .din1(grp_fu_365_p1),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_369_p0),
    .din1(grp_fu_369_p1),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .ce(1'b1),
    .dout(grp_fu_373_p2)
);

compute_dadd_64nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nsbkb_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_377_p0),
    .din1(grp_fu_377_p1),
    .ce(1'b1),
    .dout(grp_fu_377_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_381_p0),
    .din1(grp_fu_381_p1),
    .ce(1'b1),
    .dout(grp_fu_381_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_387_p0),
    .din1(grp_fu_387_p1),
    .ce(1'b1),
    .dout(grp_fu_387_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_393_p0),
    .din1(grp_fu_393_p1),
    .ce(1'b1),
    .dout(grp_fu_393_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_399_p0),
    .din1(grp_fu_399_p1),
    .ce(1'b1),
    .dout(grp_fu_399_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_405_p0),
    .din1(grp_fu_405_p1),
    .ce(1'b1),
    .dout(grp_fu_405_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_411_p0),
    .din1(grp_fu_411_p1),
    .ce(1'b1),
    .dout(grp_fu_411_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dataa_q1),
    .din1(ap_const_lv64_3FE29105E1C15098),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(datac_q1),
    .din1(ap_const_lv64_3FC2020817FC7608),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dataa_q1),
    .din1(ap_const_lv64_3FC802B841248D7E),
    .ce(1'b1),
    .dout(grp_fu_429_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(datac_q1),
    .din1(ap_const_lv64_3FE2CA3C64345CFF),
    .ce(1'b1),
    .dout(grp_fu_435_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dataa_q1),
    .din1(ap_const_lv64_3FDDB93469941850),
    .ce(1'b1),
    .dout(grp_fu_441_p2)
);

compute_dmul_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nscud_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(datac_q1),
    .din1(ap_const_lv64_3FD93C85C24C404A),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_575_p2 == 1'b0))) begin
        deSize_reg_251 <= result_fu_587_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        deSize_reg_251 <= ap_const_lv32_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond1_fu_575_p2 == 1'b0))) begin
        i_i_i_reg_240 <= i_fu_581_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_i_i_reg_240 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_fu_610_p2))) begin
        i_i_reg_283 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond_fu_616_p2))) begin
        i_i_reg_283 <= i_2_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        index_assign_reg_216 <= ap_const_lv32_0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(exitcond1_fu_575_p2 == 1'b0) & ~(1'b0 == tmp_i_fu_593_p2))) begin
        index_assign_reg_216 <= i_1_reg_857;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(exitcond1_fu_575_p2 == 1'b0) & (1'b0 == tmp_i_fu_593_p2))) begin
        indvars_iv2_reg_262 <= indvars_iv_reg_228;
    end else if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_3_fu_640_p3))) begin
        indvars_iv2_reg_262 <= indvars_iv_next2_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        indvars_iv_reg_228 <= ap_const_lv32_FFFFFFFF;
    end else if (((1'b1 == ap_CS_fsm_state3) & ~(exitcond1_fu_575_p2 == 1'b0) & ~(1'b0 == tmp_i_fu_593_p2))) begin
        indvars_iv_reg_228 <= indvars_iv_next_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(exitcond1_fu_575_p2 == 1'b0) & (1'b0 == tmp_i_fu_593_p2))) begin
        k1_in_reg_273 <= index_assign_reg_216;
    end else if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_3_fu_640_p3))) begin
        k1_in_reg_273 <= k_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == tmp_6_fu_780_p2))) begin
        leaves1_reg_327 <= leaves_1_fu_834_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == exitcond_fu_616_p2))) begin
        leaves1_reg_327 <= right_2_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == tmp_6_fu_780_p2))) begin
        left1_reg_306 <= left_1_fu_822_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == exitcond_fu_616_p2))) begin
        left1_reg_306 <= left_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == tmp_6_fu_780_p2))) begin
        right1_reg_316 <= right_fu_828_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & ~(1'b0 == exitcond_fu_616_p2))) begin
        right1_reg_316 <= right_2_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == tmp_fu_610_p2))) begin
        right_2_reg_294 <= ap_const_lv32_1;
    end else if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == exitcond_fu_616_p2))) begin
        right_2_reg_294 <= result_1_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == tmp_3_fu_640_p3))) begin
        y_reg_338 <= ap_const_lv31_0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        y_reg_338 <= y_1_reg_935;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_857 <= i_1_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_reg_883 <= k_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_477 <= grp_fu_381_p2;
        reg_484 <= grp_fu_387_p2;
        reg_492 <= grp_fu_393_p2;
        reg_500 <= grp_fu_399_p2;
        reg_507 <= grp_fu_405_p2;
        reg_514 <= grp_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_521 <= grp_fu_349_p2;
        reg_527 <= grp_fu_353_p2;
        reg_533 <= grp_fu_357_p2;
        reg_539 <= grp_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_545 <= grp_fu_365_p2;
        reg_551 <= grp_fu_369_p2;
        reg_557 <= grp_fu_373_p2;
        reg_563 <= grp_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == tmp_3_fu_640_p3))) begin
        tmp_1_reg_912 <= tmp_1_fu_664_p2;
        tmp_2_reg_917 <= tmp_2_fu_686_p2;
        tmp_57_reg_922 <= tmp_57_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_26_reg_1037 <= grp_fu_417_p2;
        tmp_27_reg_1042 <= grp_fu_423_p2;
        tmp_32_reg_1055 <= grp_fu_429_p2;
        tmp_33_reg_1061 <= grp_fu_435_p2;
        tmp_38_reg_1066 <= grp_fu_441_p2;
        tmp_42_reg_1071 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ~(1'b0 == tmp_6_fu_780_p2))) begin
        tmp_60_cast_reg_940 <= tmp_60_cast_fu_800_p1;
        tmp_61_cast_reg_951 <= tmp_61_cast_fu_811_p1;
        tmp_61_reg_962 <= tmp_61_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_1_reg_935 <= y_1_fu_785_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_fu_610_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == tmp_fu_610_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        dataa_address0 = tmp_62_cast_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dataa_address0 = tmp_60_cast_fu_800_p1;
    end else begin
        dataa_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        dataa_ce0 = 1'b1;
    end else begin
        dataa_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dataa_ce1 = 1'b1;
    end else begin
        dataa_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        dataa_we0 = 1'b1;
    end else begin
        dataa_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datac_address0 = tmp_62_cast_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        datac_address0 = tmp_60_cast_fu_800_p1;
    end else begin
        datac_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state29))) begin
        datac_ce0 = 1'b1;
    end else begin
        datac_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        datac_ce1 = 1'b1;
    end else begin
        datac_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datac_we0 = 1'b1;
    end else begin
        datac_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datag_address0 = tmp_62_cast_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        datag_address0 = tmp_60_cast_reg_940;
    end else begin
        datag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state29))) begin
        datag_ce0 = 1'b1;
    end else begin
        datag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        datag_ce1 = 1'b1;
    end else begin
        datag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datag_we0 = 1'b1;
    end else begin
        datag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datat_address0 = tmp_62_cast_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        datat_address0 = tmp_60_cast_reg_940;
    end else begin
        datat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state29))) begin
        datat_ce0 = 1'b1;
    end else begin
        datat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        datat_ce1 = 1'b1;
    end else begin
        datat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        datat_we0 = 1'b1;
    end else begin
        datat_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_349_p0 = reg_521;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_349_p0 = reg_477;
    end else begin
        grp_fu_349_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_349_p1 = reg_545;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_349_p1 = reg_477;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_349_p1 = reg_484;
    end else begin
        grp_fu_349_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_353_p0 = reg_527;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_353_p0 = reg_492;
    end else begin
        grp_fu_353_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_353_p1 = reg_551;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_353_p1 = reg_484;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_353_p1 = reg_500;
    end else begin
        grp_fu_353_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_357_p0 = reg_533;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_357_p0 = reg_507;
    end else begin
        grp_fu_357_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_357_p1 = reg_557;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_357_p1 = reg_477;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_357_p1 = reg_492;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_357_p1 = reg_484;
    end else begin
        grp_fu_357_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_361_p0 = reg_539;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_361_p0 = reg_492;
    end else begin
        grp_fu_361_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_361_p1 = reg_563;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_361_p1 = reg_492;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_361_p1 = reg_484;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_361_p1 = reg_514;
    end else begin
        grp_fu_361_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_365_p0 = reg_545;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_365_p0 = tmp_26_reg_1037;
    end else begin
        grp_fu_365_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_365_p1 = reg_500;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_365_p1 = tmp_27_reg_1042;
    end else begin
        grp_fu_365_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_369_p0 = reg_551;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_369_p0 = tmp_32_reg_1055;
    end else begin
        grp_fu_369_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_369_p1 = reg_507;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_369_p1 = tmp_33_reg_1061;
    end else begin
        grp_fu_369_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_373_p0 = reg_557;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_373_p0 = tmp_38_reg_1066;
    end else begin
        grp_fu_373_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_373_p1 = reg_500;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_373_p1 = reg_514;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_373_p1 = tmp_27_reg_1042;
    end else begin
        grp_fu_373_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_377_p0 = reg_563;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_377_p0 = tmp_32_reg_1055;
    end else begin
        grp_fu_377_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_377_p1 = reg_514;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_377_p1 = reg_507;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_377_p1 = tmp_42_reg_1071;
    end else begin
        grp_fu_377_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_381_p0 = datat_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_381_p0 = datag_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_381_p0 = dataa_q0;
    end else begin
        grp_fu_381_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_381_p1 = ap_const_lv64_3FA802B693A563D2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_381_p1 = ap_const_lv64_3FCDB9389B52007E;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_381_p1 = ap_const_lv64_3FE29105E1C15098;
    end else begin
        grp_fu_381_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_387_p0 = datat_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_387_p0 = datag_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_387_p0 = datac_q0;
    end else begin
        grp_fu_387_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_387_p1 = ap_const_lv64_3FC0D306A2B17050;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_387_p1 = ap_const_lv64_3FB802B4E6263A26;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_387_p1 = ap_const_lv64_3FC2020817FC7608;
    end else begin
        grp_fu_387_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_393_p0 = datat_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_393_p0 = datag_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_393_p0 = dataa_q0;
    end else begin
        grp_fu_393_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_393_p1 = ap_const_lv64_3FD4C17225B749AE;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_393_p1 = ap_const_lv64_3FD6456F75D9A0F1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_393_p1 = ap_const_lv64_3FC802B841248D7E;
    end else begin
        grp_fu_393_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_399_p0 = datat_q1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_399_p0 = datag_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_399_p0 = datac_q0;
    end else begin
        grp_fu_399_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_399_p1 = ap_const_lv64_3FA802B693A563D2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_399_p1 = ap_const_lv64_3FCDB9389B52007E;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_399_p1 = ap_const_lv64_3FE2CA3C64345CFF;
    end else begin
        grp_fu_399_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_405_p0 = datat_q1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_405_p0 = datag_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_405_p0 = dataa_q0;
    end else begin
        grp_fu_405_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_405_p1 = ap_const_lv64_3FC0D306A2B17050;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_405_p1 = ap_const_lv64_3FB802B4E6263A26;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_405_p1 = ap_const_lv64_3FDDB93469941850;
    end else begin
        grp_fu_405_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_411_p0 = datat_q1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_411_p0 = datag_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_411_p0 = datac_q0;
    end else begin
        grp_fu_411_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_411_p1 = ap_const_lv64_3FD4C17225B749AE;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_411_p1 = ap_const_lv64_3FD6456F75D9A0F1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_411_p1 = ap_const_lv64_3FD93C85C24C404A;
    end else begin
        grp_fu_411_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(exitcond1_fu_575_p2 == 1'b0) & (1'b0 == tmp_i_fu_593_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(exitcond1_fu_575_p2 == 1'b0) & ~(1'b0 == tmp_i_fu_593_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((1'b0 == tmp_fu_610_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(1'b0 == exitcond_fu_616_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == tmp_3_fu_640_p3)) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((1'b0 == tmp_6_fu_780_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state15 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_return = ap_const_lv64_0;

assign dataa_address1 = tmp_61_cast_fu_811_p1;

assign dataa_d0 = reg_521;

assign datac_address1 = tmp_61_cast_fu_811_p1;

assign datac_d0 = reg_527;

assign datag_address1 = tmp_61_cast_reg_951;

assign datag_d0 = reg_533;

assign datat_address1 = tmp_61_cast_reg_951;

assign datat_d0 = reg_539;

assign exitcond1_fu_575_p2 = ((i_i_i_reg_240 == index_assign_reg_216) ? 1'b1 : 1'b0);

assign exitcond_fu_616_p2 = ((i_i_reg_283 == indvars_iv2_reg_262) ? 1'b1 : 1'b0);

assign i_1_fu_569_p2 = (index_assign_reg_216 + ap_const_lv32_1);

assign i_2_fu_622_p2 = (i_i_reg_283 + ap_const_lv32_1);

assign i_fu_581_p2 = (i_i_i_reg_240 + ap_const_lv32_1);

assign indvars_iv_next2_fu_770_p2 = ($signed(indvars_iv2_reg_262) + $signed(ap_const_lv32_FFFFFFFF));

assign indvars_iv_next_fu_598_p2 = (indvars_iv_reg_228 + ap_const_lv32_1);

assign k_fu_604_p2 = ($signed(k1_in_reg_273) + $signed(ap_const_lv32_FFFFFFFF));

assign leaves_1_fu_834_p2 = ($signed(leaves1_reg_327) + $signed(ap_const_lv32_FFFFFFFE));

assign left_1_fu_822_p2 = (left1_reg_306 + ap_const_lv32_2);

assign left_fu_634_p2 = ($signed(right_2_reg_294) + $signed(ap_const_lv32_FFFFFFFF));

assign p_lshr_f_fu_726_p4 = {{left1_reg_306[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_fu_706_p4 = {{p_neg_fu_700_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_neg_fu_700_p2 = (ap_const_lv32_0 - left1_reg_306);

assign p_neg_t_fu_720_p2 = (ap_const_lv32_0 - tmp_53_fu_716_p1);

assign p_shl1_cast_fu_678_p3 = {{tmp_51_fu_674_p1}, {ap_const_lv2_0}};

assign p_shl2_cast_fu_656_p3 = {{tmp_9_fu_652_p1}, {ap_const_lv2_0}};

assign p_shl_cast_fu_756_p3 = {{tmp_56_fu_752_p1}, {ap_const_lv2_0}};

assign parent_fu_740_p3 = ((tmp_52_fu_692_p3[0:0] === 1'b1) ? p_neg_t_fu_720_p2 : tmp_54_fu_736_p1);

assign result_1_fu_628_p2 = right_2_reg_294 << ap_const_lv32_1;

assign result_fu_587_p2 = deSize_reg_251 << ap_const_lv32_1;

assign right_fu_828_p2 = (right1_reg_316 + ap_const_lv32_2);

assign tmp_1_fu_664_p2 = (p_shl2_cast_fu_656_p3 + tmp_8_fu_648_p1);

assign tmp_2_fu_686_p2 = (p_shl1_cast_fu_678_p3 + tmp_50_fu_670_p1);

assign tmp_3_fu_640_p3 = leaves1_reg_327[ap_const_lv32_1F];

assign tmp_50_fu_670_p1 = right1_reg_316[7:0];

assign tmp_51_fu_674_p1 = right1_reg_316[5:0];

assign tmp_52_fu_692_p3 = left1_reg_306[ap_const_lv32_1F];

assign tmp_53_fu_716_p1 = p_lshr_fu_706_p4;

assign tmp_54_fu_736_p1 = p_lshr_f_fu_726_p4;

assign tmp_55_fu_748_p1 = parent_fu_740_p3[7:0];

assign tmp_56_fu_752_p1 = parent_fu_740_p3[5:0];

assign tmp_57_fu_764_p2 = (p_shl_cast_fu_756_p3 + tmp_55_fu_748_p1);

assign tmp_58_fu_791_p1 = y_reg_338[7:0];

assign tmp_59_fu_795_p2 = (tmp_1_reg_912 + tmp_58_fu_791_p1);

assign tmp_60_cast_fu_800_p1 = $signed(tmp_59_fu_795_p2);

assign tmp_60_fu_806_p2 = (tmp_2_reg_917 + tmp_58_fu_791_p1);

assign tmp_61_cast_fu_811_p1 = $signed(tmp_60_fu_806_p2);

assign tmp_61_fu_817_p2 = (tmp_57_reg_922 + tmp_58_fu_791_p1);

assign tmp_62_cast_fu_840_p1 = $signed(tmp_61_reg_962);

assign tmp_6_fu_780_p2 = (($signed(y_cast_fu_776_p1) < $signed(length_r)) ? 1'b1 : 1'b0);

assign tmp_8_fu_648_p1 = left1_reg_306[7:0];

assign tmp_9_fu_652_p1 = left1_reg_306[5:0];

assign tmp_fu_610_p2 = (($signed(k_fu_604_p2) > $signed(32'b00000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign tmp_i_fu_593_p2 = (($signed(deSize_reg_251) < $signed(size)) ? 1'b1 : 1'b0);

assign y_1_fu_785_p2 = (y_reg_338 + ap_const_lv31_1);

assign y_cast_fu_776_p1 = y_reg_338;

endmodule //compute
