-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compute is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    length_r : IN STD_LOGIC_VECTOR (31 downto 0);
    dataa_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dataa_ce0 : OUT STD_LOGIC;
    dataa_we0 : OUT STD_LOGIC;
    dataa_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataa_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dataa_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dataa_ce1 : OUT STD_LOGIC;
    dataa_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    datac_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datac_ce0 : OUT STD_LOGIC;
    datac_we0 : OUT STD_LOGIC;
    datac_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    datac_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    datac_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datac_ce1 : OUT STD_LOGIC;
    datac_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    datag_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datag_ce0 : OUT STD_LOGIC;
    datag_we0 : OUT STD_LOGIC;
    datag_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    datag_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    datag_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datag_ce1 : OUT STD_LOGIC;
    datag_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    datat_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datat_ce0 : OUT STD_LOGIC;
    datat_we0 : OUT STD_LOGIC;
    datat_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    datat_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    datat_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    datat_ce1 : OUT STD_LOGIC;
    datat_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of compute is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "compute,hls_ip_2016_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.183000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=156,HLS_SYN_FF=8975,HLS_SYN_LUT=11309}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv64_3FE29105E1C15098 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100010100100010000010111100001110000010101000010011000";
    constant ap_const_lv64_3FCDB9389B52007E : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001101101110010011100010011011010100100000000001111110";
    constant ap_const_lv64_3FA802B693A563D2 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110101000000000101011011010010011101001010110001111010010";
    constant ap_const_lv64_3FC2020817FC7608 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000010000000100000100000010111111111000111011000001000";
    constant ap_const_lv64_3FB802B4E6263A26 : STD_LOGIC_VECTOR (63 downto 0) := "0011111110111000000000101011010011100110001001100011101000100110";
    constant ap_const_lv64_3FC0D306A2B17050 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111000000110100110000011010100010101100010111000001010000";
    constant ap_const_lv64_3FC802B841248D7E : STD_LOGIC_VECTOR (63 downto 0) := "0011111111001000000000101011100001000001001001001000110101111110";
    constant ap_const_lv64_3FD6456F75D9A0F1 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010110010001010110111101110101110110011010000011110001";
    constant ap_const_lv64_3FD4C17225B749AE : STD_LOGIC_VECTOR (63 downto 0) := "0011111111010100110000010111001000100101101101110100100110101110";
    constant ap_const_lv64_3FE2CA3C64345CFF : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100010110010100011110001100100001101000101110011111111";
    constant ap_const_lv64_3FDDB93469941850 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011101101110010011010001101001100101000001100001010000";
    constant ap_const_lv64_3FD93C85C24C404A : STD_LOGIC_VECTOR (63 downto 0) := "0011111111011001001111001000010111000010010011000100000001001010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_381_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_477 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_387_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_484 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_393_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_492 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_399_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_500 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_405_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_507 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_514 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_521 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_fu_353_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_527 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_357_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_533 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_539 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_545 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_369_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_551 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_557 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_377_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_563 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_fu_569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_857 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_581_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal result_fu_587_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_2_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal result_1_fu_628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal left_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_664_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_912 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_3_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_686_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_917 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_reg_922 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv_next2_fu_770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_785_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal y_1_reg_935 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_60_cast_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_cast_reg_940 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_cast_fu_811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_cast_reg_951 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_817_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_reg_962 : STD_LOGIC_VECTOR (7 downto 0);
    signal left_1_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal leaves_1_fu_834_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_reg_1037 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_reg_1042 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_429_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_reg_1055 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_reg_1061 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_441_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_reg_1066 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_reg_1071 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal index_assign_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_i_reg_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal deSize_reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv2_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal k1_in_reg_273 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_283 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal right_2_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal left1_reg_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal right1_reg_316 : STD_LOGIC_VECTOR (31 downto 0);
    signal leaves1_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_reg_338 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_62_cast_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_349_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fu_353_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_357_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_357_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_361_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_365_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_369_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_373_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_377_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_381_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_387_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_393_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_399_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_405_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_411_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_652_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_cast_fu_656_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_648_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_674_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl1_cast_fu_678_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_670_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_neg_fu_700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_706_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_53_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_726_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_52_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal parent_fu_740_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_752_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_756_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_748_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_cast_fu_776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_791_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_795_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_806_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);

    component compute_dadd_64nsbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component compute_dmul_64nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    compute_dadd_64nsbkb_U1 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_349_p0,
        din1 => grp_fu_349_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_349_p2);

    compute_dadd_64nsbkb_U2 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_353_p0,
        din1 => grp_fu_353_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_353_p2);

    compute_dadd_64nsbkb_U3 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_357_p0,
        din1 => grp_fu_357_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_357_p2);

    compute_dadd_64nsbkb_U4 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_361_p0,
        din1 => grp_fu_361_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_361_p2);

    compute_dadd_64nsbkb_U5 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_365_p0,
        din1 => grp_fu_365_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_365_p2);

    compute_dadd_64nsbkb_U6 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_369_p0,
        din1 => grp_fu_369_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_369_p2);

    compute_dadd_64nsbkb_U7 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_373_p0,
        din1 => grp_fu_373_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_373_p2);

    compute_dadd_64nsbkb_U8 : component compute_dadd_64nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_377_p0,
        din1 => grp_fu_377_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_377_p2);

    compute_dmul_64nscud_U9 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_381_p0,
        din1 => grp_fu_381_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_381_p2);

    compute_dmul_64nscud_U10 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_387_p0,
        din1 => grp_fu_387_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_387_p2);

    compute_dmul_64nscud_U11 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_393_p0,
        din1 => grp_fu_393_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_393_p2);

    compute_dmul_64nscud_U12 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_399_p0,
        din1 => grp_fu_399_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_399_p2);

    compute_dmul_64nscud_U13 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_405_p0,
        din1 => grp_fu_405_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_405_p2);

    compute_dmul_64nscud_U14 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_411_p0,
        din1 => grp_fu_411_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_411_p2);

    compute_dmul_64nscud_U15 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dataa_q1,
        din1 => ap_const_lv64_3FE29105E1C15098,
        ce => ap_const_logic_1,
        dout => grp_fu_417_p2);

    compute_dmul_64nscud_U16 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => datac_q1,
        din1 => ap_const_lv64_3FC2020817FC7608,
        ce => ap_const_logic_1,
        dout => grp_fu_423_p2);

    compute_dmul_64nscud_U17 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dataa_q1,
        din1 => ap_const_lv64_3FC802B841248D7E,
        ce => ap_const_logic_1,
        dout => grp_fu_429_p2);

    compute_dmul_64nscud_U18 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => datac_q1,
        din1 => ap_const_lv64_3FE2CA3C64345CFF,
        ce => ap_const_logic_1,
        dout => grp_fu_435_p2);

    compute_dmul_64nscud_U19 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => dataa_q1,
        din1 => ap_const_lv64_3FDDB93469941850,
        ce => ap_const_logic_1,
        dout => grp_fu_441_p2);

    compute_dmul_64nscud_U20 : component compute_dmul_64nscud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => datac_q1,
        din1 => ap_const_lv64_3FD93C85C24C404A,
        ce => ap_const_logic_1,
        dout => grp_fu_447_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    deSize_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (exitcond1_fu_575_p2 = ap_const_lv1_0))) then 
                deSize_reg_251 <= result_fu_587_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                deSize_reg_251 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    i_i_i_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (exitcond1_fu_575_p2 = ap_const_lv1_0))) then 
                i_i_i_reg_240 <= i_fu_581_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
                i_i_i_reg_240 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_i_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = tmp_fu_610_p2)))) then 
                i_i_reg_283 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond_fu_616_p2))) then 
                i_i_reg_283 <= i_2_fu_622_p2;
            end if; 
        end if;
    end process;

    index_assign_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                index_assign_reg_216 <= ap_const_lv32_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_i_fu_593_p2)))) then 
                index_assign_reg_216 <= i_1_reg_857;
            end if; 
        end if;
    end process;

    indvars_iv2_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_i_fu_593_p2))) then 
                indvars_iv2_reg_262 <= indvars_iv_reg_228;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_lv1_0 = tmp_3_fu_640_p3)))) then 
                indvars_iv2_reg_262 <= indvars_iv_next2_fu_770_p2;
            end if; 
        end if;
    end process;

    indvars_iv_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvars_iv_reg_228 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_i_fu_593_p2)))) then 
                indvars_iv_reg_228 <= indvars_iv_next_fu_598_p2;
            end if; 
        end if;
    end process;

    k1_in_reg_273_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_i_fu_593_p2))) then 
                k1_in_reg_273 <= index_assign_reg_216;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_lv1_0 = tmp_3_fu_640_p3)))) then 
                k1_in_reg_273 <= k_reg_883;
            end if; 
        end if;
    end process;

    leaves1_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_780_p2))) then 
                leaves1_reg_327 <= leaves_1_fu_834_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = exitcond_fu_616_p2)))) then 
                leaves1_reg_327 <= right_2_reg_294;
            end if; 
        end if;
    end process;

    left1_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_780_p2))) then 
                left1_reg_306 <= left_1_fu_822_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = exitcond_fu_616_p2)))) then 
                left1_reg_306 <= left_fu_634_p2;
            end if; 
        end if;
    end process;

    right1_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_lv1_0 = tmp_6_fu_780_p2))) then 
                right1_reg_316 <= right_fu_828_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = exitcond_fu_616_p2)))) then 
                right1_reg_316 <= right_2_reg_294;
            end if; 
        end if;
    end process;

    right_2_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = tmp_fu_610_p2)))) then 
                right_2_reg_294 <= ap_const_lv32_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = exitcond_fu_616_p2))) then 
                right_2_reg_294 <= result_1_fu_628_p2;
            end if; 
        end if;
    end process;

    y_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_3_fu_640_p3))) then 
                y_reg_338 <= ap_const_lv31_0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
                y_reg_338 <= y_1_reg_935;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_1_reg_857 <= i_1_fu_569_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                k_reg_883 <= k_fu_604_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)))) then
                reg_477 <= grp_fu_381_p2;
                reg_484 <= grp_fu_387_p2;
                reg_492 <= grp_fu_393_p2;
                reg_500 <= grp_fu_399_p2;
                reg_507 <= grp_fu_405_p2;
                reg_514 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state28)))) then
                reg_521 <= grp_fu_349_p2;
                reg_527 <= grp_fu_353_p2;
                reg_533 <= grp_fu_357_p2;
                reg_539 <= grp_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state24)))) then
                reg_545 <= grp_fu_365_p2;
                reg_551 <= grp_fu_369_p2;
                reg_557 <= grp_fu_373_p2;
                reg_563 <= grp_fu_377_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_3_fu_640_p3))) then
                tmp_1_reg_912 <= tmp_1_fu_664_p2;
                tmp_2_reg_917 <= tmp_2_fu_686_p2;
                tmp_57_reg_922 <= tmp_57_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12))) then
                tmp_26_reg_1037 <= grp_fu_417_p2;
                tmp_27_reg_1042 <= grp_fu_423_p2;
                tmp_32_reg_1055 <= grp_fu_429_p2;
                tmp_33_reg_1061 <= grp_fu_435_p2;
                tmp_38_reg_1066 <= grp_fu_441_p2;
                tmp_42_reg_1071 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_lv1_0 = tmp_6_fu_780_p2)))) then
                tmp_60_cast_reg_940 <= tmp_60_cast_fu_800_p1;
                tmp_61_cast_reg_951 <= tmp_61_cast_fu_811_p1;
                tmp_61_reg_962 <= tmp_61_fu_817_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then
                y_1_reg_935 <= y_1_fu_785_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond1_fu_575_p2, tmp_i_fu_593_p2, exitcond_fu_616_p2, tmp_3_fu_640_p3, tmp_6_fu_780_p2, tmp_fu_610_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if ((not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_i_fu_593_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((exitcond1_fu_575_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_i_fu_593_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((ap_const_lv1_0 = tmp_fu_610_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_lv1_0 = exitcond_fu_616_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (not((ap_const_lv1_0 = tmp_3_fu_640_p3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if ((ap_const_lv1_0 = tmp_6_fu_780_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state28 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);

    ap_done_assign_proc : process(ap_CS_fsm_state4, tmp_fu_610_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_fu_610_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, tmp_fu_610_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_fu_610_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_const_lv64_0;

    dataa_address0_assign_proc : process(ap_CS_fsm_state7, tmp_60_cast_fu_800_p1, ap_CS_fsm_state29, tmp_62_cast_fu_840_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            dataa_address0 <= tmp_62_cast_fu_840_p1(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            dataa_address0 <= tmp_60_cast_fu_800_p1(7 - 1 downto 0);
        else 
            dataa_address0 <= "XXXXXXX";
        end if; 
    end process;

    dataa_address1 <= tmp_61_cast_fu_811_p1(7 - 1 downto 0);

    dataa_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            dataa_ce0 <= ap_const_logic_1;
        else 
            dataa_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dataa_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            dataa_ce1 <= ap_const_logic_1;
        else 
            dataa_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dataa_d0 <= reg_521;

    dataa_we0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            dataa_we0 <= ap_const_logic_1;
        else 
            dataa_we0 <= ap_const_logic_0;
        end if; 
    end process;


    datac_address0_assign_proc : process(ap_CS_fsm_state7, tmp_60_cast_fu_800_p1, ap_CS_fsm_state29, tmp_62_cast_fu_840_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            datac_address0 <= tmp_62_cast_fu_840_p1(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            datac_address0 <= tmp_60_cast_fu_800_p1(7 - 1 downto 0);
        else 
            datac_address0 <= "XXXXXXX";
        end if; 
    end process;

    datac_address1 <= tmp_61_cast_fu_811_p1(7 - 1 downto 0);

    datac_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datac_ce0 <= ap_const_logic_1;
        else 
            datac_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    datac_ce1_assign_proc : process(ap_CS_fsm_state7)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            datac_ce1 <= ap_const_logic_1;
        else 
            datac_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    datac_d0 <= reg_527;

    datac_we0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datac_we0 <= ap_const_logic_1;
        else 
            datac_we0 <= ap_const_logic_0;
        end if; 
    end process;


    datag_address0_assign_proc : process(tmp_60_cast_reg_940, ap_CS_fsm_state11, ap_CS_fsm_state29, tmp_62_cast_fu_840_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            datag_address0 <= tmp_62_cast_fu_840_p1(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            datag_address0 <= tmp_60_cast_reg_940(7 - 1 downto 0);
        else 
            datag_address0 <= "XXXXXXX";
        end if; 
    end process;

    datag_address1 <= tmp_61_cast_reg_951(7 - 1 downto 0);

    datag_ce0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datag_ce0 <= ap_const_logic_1;
        else 
            datag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    datag_ce1_assign_proc : process(ap_CS_fsm_state11)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
            datag_ce1 <= ap_const_logic_1;
        else 
            datag_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    datag_d0 <= reg_533;

    datag_we0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datag_we0 <= ap_const_logic_1;
        else 
            datag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    datat_address0_assign_proc : process(tmp_60_cast_reg_940, ap_CS_fsm_state15, ap_CS_fsm_state29, tmp_62_cast_fu_840_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            datat_address0 <= tmp_62_cast_fu_840_p1(7 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            datat_address0 <= tmp_60_cast_reg_940(7 - 1 downto 0);
        else 
            datat_address0 <= "XXXXXXX";
        end if; 
    end process;

    datat_address1 <= tmp_61_cast_reg_951(7 - 1 downto 0);

    datat_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datat_ce0 <= ap_const_logic_1;
        else 
            datat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    datat_ce1_assign_proc : process(ap_CS_fsm_state15)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            datat_ce1 <= ap_const_logic_1;
        else 
            datat_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    datat_d0 <= reg_539;

    datat_we0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            datat_we0 <= ap_const_logic_1;
        else 
            datat_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_575_p2 <= "1" when (i_i_i_reg_240 = index_assign_reg_216) else "0";
    exitcond_fu_616_p2 <= "1" when (i_i_reg_283 = indvars_iv2_reg_262) else "0";

    grp_fu_349_p0_assign_proc : process(reg_477, reg_521, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then 
            grp_fu_349_p0 <= reg_521;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_349_p0 <= reg_477;
        else 
            grp_fu_349_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_349_p1_assign_proc : process(reg_477, reg_484, reg_545, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            grp_fu_349_p1 <= reg_545;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_349_p1 <= reg_477;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_349_p1 <= reg_484;
        else 
            grp_fu_349_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_353_p0_assign_proc : process(reg_492, reg_527, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then 
            grp_fu_353_p0 <= reg_527;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_353_p0 <= reg_492;
        else 
            grp_fu_353_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_353_p1_assign_proc : process(reg_484, reg_500, reg_551, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            grp_fu_353_p1 <= reg_551;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_353_p1 <= reg_484;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_353_p1 <= reg_500;
        else 
            grp_fu_353_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_357_p0_assign_proc : process(reg_507, reg_533, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then 
            grp_fu_357_p0 <= reg_533;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_357_p0 <= reg_507;
        else 
            grp_fu_357_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_357_p1_assign_proc : process(reg_477, reg_484, reg_492, reg_557, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            grp_fu_357_p1 <= reg_557;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            grp_fu_357_p1 <= reg_477;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_fu_357_p1 <= reg_492;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_357_p1 <= reg_484;
        else 
            grp_fu_357_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_361_p0_assign_proc : process(reg_492, reg_539, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)))) then 
            grp_fu_361_p0 <= reg_539;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_361_p0 <= reg_492;
        else 
            grp_fu_361_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_361_p1_assign_proc : process(reg_484, reg_492, reg_514, reg_563, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21, ap_CS_fsm_state25)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state25))) then 
            grp_fu_361_p1 <= reg_563;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            grp_fu_361_p1 <= reg_492;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_fu_361_p1 <= reg_484;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_361_p1 <= reg_514;
        else 
            grp_fu_361_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_365_p0_assign_proc : process(reg_545, tmp_26_reg_1037, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_365_p0 <= reg_545;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_365_p0 <= tmp_26_reg_1037;
        else 
            grp_fu_365_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_365_p1_assign_proc : process(reg_500, tmp_27_reg_1042, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_365_p1 <= reg_500;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_365_p1 <= tmp_27_reg_1042;
        else 
            grp_fu_365_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_369_p0_assign_proc : process(reg_551, tmp_32_reg_1055, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_369_p0 <= reg_551;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_369_p0 <= tmp_32_reg_1055;
        else 
            grp_fu_369_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_369_p1_assign_proc : process(reg_507, tmp_33_reg_1061, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_369_p1 <= reg_507;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_369_p1 <= tmp_33_reg_1061;
        else 
            grp_fu_369_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_373_p0_assign_proc : process(reg_557, tmp_38_reg_1066, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_373_p0 <= reg_557;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_373_p0 <= tmp_38_reg_1066;
        else 
            grp_fu_373_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_373_p1_assign_proc : process(reg_500, reg_514, tmp_27_reg_1042, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            grp_fu_373_p1 <= reg_500;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_fu_373_p1 <= reg_514;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_373_p1 <= tmp_27_reg_1042;
        else 
            grp_fu_373_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_377_p0_assign_proc : process(reg_563, tmp_32_reg_1055, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            grp_fu_377_p0 <= reg_563;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_377_p0 <= tmp_32_reg_1055;
        else 
            grp_fu_377_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_377_p1_assign_proc : process(reg_507, reg_514, tmp_42_reg_1071, ap_CS_fsm_state13, ap_CS_fsm_state17, ap_CS_fsm_state21)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            grp_fu_377_p1 <= reg_514;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            grp_fu_377_p1 <= reg_507;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13))) then 
            grp_fu_377_p1 <= tmp_42_reg_1071;
        else 
            grp_fu_377_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_381_p0_assign_proc : process(dataa_q0, datag_q0, datat_q0, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_381_p0 <= datat_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_381_p0 <= datag_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_381_p0 <= dataa_q0;
        else 
            grp_fu_381_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_381_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_381_p1 <= ap_const_lv64_3FA802B693A563D2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_381_p1 <= ap_const_lv64_3FCDB9389B52007E;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_381_p1 <= ap_const_lv64_3FE29105E1C15098;
        else 
            grp_fu_381_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_387_p0_assign_proc : process(datac_q0, datag_q0, datat_q0, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_387_p0 <= datat_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_387_p0 <= datag_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_387_p0 <= datac_q0;
        else 
            grp_fu_387_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_387_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_387_p1 <= ap_const_lv64_3FC0D306A2B17050;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_387_p1 <= ap_const_lv64_3FB802B4E6263A26;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_387_p1 <= ap_const_lv64_3FC2020817FC7608;
        else 
            grp_fu_387_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_393_p0_assign_proc : process(dataa_q0, datag_q0, datat_q0, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_393_p0 <= datat_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_393_p0 <= datag_q0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_393_p0 <= dataa_q0;
        else 
            grp_fu_393_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_393_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_393_p1 <= ap_const_lv64_3FD4C17225B749AE;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_393_p1 <= ap_const_lv64_3FD6456F75D9A0F1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_393_p1 <= ap_const_lv64_3FC802B841248D7E;
        else 
            grp_fu_393_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_399_p0_assign_proc : process(datac_q0, datag_q1, datat_q1, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_399_p0 <= datat_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_399_p0 <= datag_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_399_p0 <= datac_q0;
        else 
            grp_fu_399_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_399_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_399_p1 <= ap_const_lv64_3FA802B693A563D2;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_399_p1 <= ap_const_lv64_3FCDB9389B52007E;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_399_p1 <= ap_const_lv64_3FE2CA3C64345CFF;
        else 
            grp_fu_399_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p0_assign_proc : process(dataa_q0, datag_q1, datat_q1, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_405_p0 <= datat_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_405_p0 <= datag_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_405_p0 <= dataa_q0;
        else 
            grp_fu_405_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_405_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_405_p1 <= ap_const_lv64_3FC0D306A2B17050;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_405_p1 <= ap_const_lv64_3FB802B4E6263A26;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_405_p1 <= ap_const_lv64_3FDDB93469941850;
        else 
            grp_fu_405_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_411_p0_assign_proc : process(datac_q0, datag_q1, datat_q1, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_411_p0 <= datat_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_411_p0 <= datag_q1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_411_p0 <= datac_q0;
        else 
            grp_fu_411_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_411_p1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            grp_fu_411_p1 <= ap_const_lv64_3FD4C17225B749AE;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
            grp_fu_411_p1 <= ap_const_lv64_3FD6456F75D9A0F1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            grp_fu_411_p1 <= ap_const_lv64_3FD93C85C24C404A;
        else 
            grp_fu_411_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_569_p2 <= std_logic_vector(unsigned(index_assign_reg_216) + unsigned(ap_const_lv32_1));
    i_2_fu_622_p2 <= std_logic_vector(unsigned(i_i_reg_283) + unsigned(ap_const_lv32_1));
    i_fu_581_p2 <= std_logic_vector(unsigned(i_i_i_reg_240) + unsigned(ap_const_lv32_1));
    indvars_iv_next2_fu_770_p2 <= std_logic_vector(unsigned(indvars_iv2_reg_262) + unsigned(ap_const_lv32_FFFFFFFF));
    indvars_iv_next_fu_598_p2 <= std_logic_vector(unsigned(indvars_iv_reg_228) + unsigned(ap_const_lv32_1));
    k_fu_604_p2 <= std_logic_vector(unsigned(k1_in_reg_273) + unsigned(ap_const_lv32_FFFFFFFF));
    leaves_1_fu_834_p2 <= std_logic_vector(unsigned(leaves1_reg_327) + unsigned(ap_const_lv32_FFFFFFFE));
    left_1_fu_822_p2 <= std_logic_vector(unsigned(left1_reg_306) + unsigned(ap_const_lv32_2));
    left_fu_634_p2 <= std_logic_vector(unsigned(right_2_reg_294) + unsigned(ap_const_lv32_FFFFFFFF));
    p_lshr_f_fu_726_p4 <= left1_reg_306(31 downto 1);
    p_lshr_fu_706_p4 <= p_neg_fu_700_p2(31 downto 1);
    p_neg_fu_700_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(left1_reg_306));
    p_neg_t_fu_720_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_53_fu_716_p1));
    p_shl1_cast_fu_678_p3 <= (tmp_51_fu_674_p1 & ap_const_lv2_0);
    p_shl2_cast_fu_656_p3 <= (tmp_9_fu_652_p1 & ap_const_lv2_0);
    p_shl_cast_fu_756_p3 <= (tmp_56_fu_752_p1 & ap_const_lv2_0);
    parent_fu_740_p3 <= 
        p_neg_t_fu_720_p2 when (tmp_52_fu_692_p3(0) = '1') else 
        tmp_54_fu_736_p1;
    result_1_fu_628_p2 <= std_logic_vector(shift_left(unsigned(right_2_reg_294),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    result_fu_587_p2 <= std_logic_vector(shift_left(unsigned(deSize_reg_251),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    right_fu_828_p2 <= std_logic_vector(unsigned(right1_reg_316) + unsigned(ap_const_lv32_2));
    tmp_1_fu_664_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_656_p3) + unsigned(tmp_8_fu_648_p1));
    tmp_2_fu_686_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_678_p3) + unsigned(tmp_50_fu_670_p1));
    tmp_3_fu_640_p3 <= leaves1_reg_327(31 downto 31);
    tmp_50_fu_670_p1 <= right1_reg_316(8 - 1 downto 0);
    tmp_51_fu_674_p1 <= right1_reg_316(6 - 1 downto 0);
    tmp_52_fu_692_p3 <= left1_reg_306(31 downto 31);
    tmp_53_fu_716_p1 <= std_logic_vector(resize(unsigned(p_lshr_fu_706_p4),32));
    tmp_54_fu_736_p1 <= std_logic_vector(resize(unsigned(p_lshr_f_fu_726_p4),32));
    tmp_55_fu_748_p1 <= parent_fu_740_p3(8 - 1 downto 0);
    tmp_56_fu_752_p1 <= parent_fu_740_p3(6 - 1 downto 0);
    tmp_57_fu_764_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_756_p3) + unsigned(tmp_55_fu_748_p1));
    tmp_58_fu_791_p1 <= y_reg_338(8 - 1 downto 0);
    tmp_59_fu_795_p2 <= std_logic_vector(unsigned(tmp_1_reg_912) + unsigned(tmp_58_fu_791_p1));
        tmp_60_cast_fu_800_p1 <= std_logic_vector(resize(signed(tmp_59_fu_795_p2),64));

    tmp_60_fu_806_p2 <= std_logic_vector(unsigned(tmp_2_reg_917) + unsigned(tmp_58_fu_791_p1));
        tmp_61_cast_fu_811_p1 <= std_logic_vector(resize(signed(tmp_60_fu_806_p2),64));

    tmp_61_fu_817_p2 <= std_logic_vector(unsigned(tmp_57_reg_922) + unsigned(tmp_58_fu_791_p1));
        tmp_62_cast_fu_840_p1 <= std_logic_vector(resize(signed(tmp_61_reg_962),64));

    tmp_6_fu_780_p2 <= "1" when (signed(y_cast_fu_776_p1) < signed(length_r)) else "0";
    tmp_8_fu_648_p1 <= left1_reg_306(8 - 1 downto 0);
    tmp_9_fu_652_p1 <= left1_reg_306(6 - 1 downto 0);
    tmp_fu_610_p2 <= "1" when (signed(k_fu_604_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_i_fu_593_p2 <= "1" when (signed(deSize_reg_251) < signed(size)) else "0";
    y_1_fu_785_p2 <= std_logic_vector(unsigned(y_reg_338) + unsigned(ap_const_lv31_1));
    y_cast_fu_776_p1 <= std_logic_vector(resize(unsigned(y_reg_338),32));
end behav;
